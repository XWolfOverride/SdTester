<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>